import React from "react";
import Head from "next/head";
import Navbar from "../../../components/navbar";
import Hero from "../../../components/hero";
import { client, urlFor } from "../../../client";
import TeamList from "../../../components/team/teamlist";
import { MdLocationCity } from "react-icons/md";

export default function Team({ team, statesList }) {
  return (
    <div>
      <Head>
        <title>Freemodel</title>
        {/* <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/ENicon.svg" /> */}
      </Head>

      <Navbar />

      <main>
        <Hero hero={{ title: "Meet the team." }} />

        {/* Sort project directors by state */}
        {statesList.map((state, idx) => {
          // get all project directors in this state
          const filteredTeam = team.filter(
            (item) => item.state[0].location.state.statename === state.statename
          );
          //   check if there are any project directors in this state
          if (filteredTeam.length > 0) {
            return (
              <div key={idx}>
                <TeamList title={state.statename} team={filteredTeam} />
              </div>
            );
          }

          return null;
        })}
      </main>
    </div>
  );
}

export const getStaticProps = async () => {
  //const query = '*[_type == "projectdirector"]';

  const query = `*[_type == "projectdirector"] {
    _id,
    name,
    slug,
    image {
        asset->{
            _ref,
            _type,
            altText,
            description,
            "tags": opt.media.tags[]->name.current,
            title,
            url
        }
    },
    title,
    bio,
    location->{
        name,
        slug
    },
    "state": *[_type == "projectdirector" && _id == ^. _id]{
        location->{
            _id,
            name,
            state->{
                _id,
                statename,
            }
        }
    },
}
`;

  //get states
  const states = `*[_type == "states"] {
    _id,
    statename,
    stateabbr,
    slug,
}`;

  const team = await client.fetch(query);
  const statesList = await client.fetch(states);

  return {
    props: {
      team,
      statesList,
    },

    revalidate: 10,
  };
};
